name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  REGISTRY: 730335217232.dkr.ecr.us-east-1.amazonaws.com
  REPOSITORY: dog-breed-classifier
  IMAGE_TAG: ${{ github.sha }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./webapp
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          pytest

  build:
    name: Build Webapp
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./webapp
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Webapp
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .

      - name: Configure AWS credentials
        if: github.ref == 'refs/heads/main'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        if: github.ref == 'refs/heads/main'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Upload Image to ECR
        if: github.ref == 'refs/heads/main'
        run: |
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  deploy:
    name: Deploy Webapp
    if: github.ref == 'refs/heads/main'
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install SSH client
        run: sudo apt-get install -y openssh-client

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin ${{ env.REGISTRY }}
            sudo docker pull ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.$IMAGE_TAG }}
            sudo docker stop my-app || true
            sudo docker rm my-app || true
            sudo docker run -d --name my-app -p 80:80 ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.$IMAGE_TAG }}
          EOF
